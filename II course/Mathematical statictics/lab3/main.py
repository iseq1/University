import csv
import math
import numpy as np
import scipy.stats
from scipy import stats
from scipy.stats import t

#import matplotlib as mpl
#import matplotlib.pyplot as plt
#import pylab
#mpl.use('TkAgg')

# Задание r2z1: вариант 4 (Z8: Проверить гипотезу однородности по двухвыборочному критерию Стьюдента)
# α = 0.1
# K: I-ая гр. Больше

# Вариант 4 - Двухвыборочный критерий Стьюдента.
# К заданию прилагаются две выборки и дополнительные параметры: требуемый уровень значимости критерия α и вид альтернативной гипотезы K (либо H1).
# Гипотеза H0 (нулевая гипотеза) выбирается как обратная по отношению к альтернативе.
# Описание и теоретические аспекты выполнения см. в [1], с.70–71 (Задание 8).

# Поскольку у нас односторонний критерий и мы ищем гипотезу о том, что первая группа больше, критическая область будет находиться справа от критического значения.
# Исходя из этих результатов, мы не можем отвергнуть нулевую гипотезу о том, что нет статистически значимой разницы между количеством кликов на баннерах первого и второго типа.

print("Задача: \nКомпания, занимающаяся производством рекламных баннеров, провела эксперимент, \nчтобы определить, какой из двух типов баннеров привлекает больше кликов. \nДля этого было выбрано две группы людей: первой группе были показаны баннеры первого типа, \nа второй группе - баннеры второго типа. После этого было зафиксировано количество кликов \nна баннерах в каждой группе. Исходя из полученных данных, был применен двухвыборочный \nt-тест с уровнем значимости 0.1 и альтернативной гипотезой, что первая группа (которой показывали баннеры первого типа) \nимеет большее количество кликов, чем вторая группа (которой показывали баннеры второго типа).\n\n")

alpha = 0.1
K = 'greater'

x=[]
y=[]

with open('D:/failiki/university/2 курс/ТВИМС/5/r2z1.csv', 'r') as csvfile:
    reader = csv.reader(csvfile)
    next(reader)
    for row in reader:
        if(row[0]!=''):
            x.append(float(row[0]))
            y.append(float(row[1]))
        else:
            y.append(float(row[1]))

def Average(x): #Среднее
    avg = 0
    for i in x:
        avg+=i
    return avg/len(x)

def Shifted_dispersion(x): #Смещённая дисперсия
    disp = 0
    for i in range(0, len(x)):
        disp+= (x[i]-Average(x))**2
    return disp/len(x)

def Standard_deviation(x): #Стандартное отклонение
    return math.sqrt(Shifted_dispersion(x))

def df(x,y): #Степень свободы
    return len(x)+len(y)-2

def static(x, y): # Статистика
    return ((Average(x)-Average(y))/(math.sqrt(len(x)*Shifted_dispersion(x) + len(y)*Shifted_dispersion(y))))*(math.sqrt((len(x)*len(y)*df(x,y))/(len(x)+len(y))))

t_statistic, p_value = stats.ttest_ind(x, y, equal_var=True)
t_critical = stats.t.ppf(1 - alpha, df(x,y))

print("x = ", x, "\ny = ", y)
print("Количество элементов x: ", len(x), "\nКоличество элементов y: ", len(y))
print("Среднее значение х: ", Average(x), "\nСреднее значение y: ", Average(y))
print("Дисперсия х: ", Shifted_dispersion(x), "\nДисперсия y: ", Shifted_dispersion(y))
print("Стандартное отклонение х: ", Standard_deviation(x), "\nСтандартное отклонение y: ", Standard_deviation(y))
print("Степень свободы: ", df(x,y))
print("Критическая const: ", t_critical,"\nСтатистика: ", static(x,y), "\np-значение: ", p_value)

if K == 'greater':
    print("Вид критической области: Для одностороннего критерия \n\tс альтернативной гипотезой K: первая группа больше, \n\tкритическая область будет находиться в правой части распределения Стьюдента, \n\tт.е. при t >", t_critical)
elif K == 'less':
    print("Вид критической области: Для одностороннего критерия \n\tс альтернативной гипотезой K: первая группа меньше, \n\tкритическая область будет находиться в левой части распределения Стьюдента, \n\tт.е. при t <", t_critical)
if K == 'two-sided':
    print("Вид критической области: Для одностороннего критерия \n\tс альтернативной гипотезой K: первая группа равна, \n\tкритическая область будет находиться в обеих хвостах распределения, \n\tт.е. при ", t_critical, " < t < ", t_critical)

if K == 'greater':
    if static(x,y) > t_critical:
        print("Вывод о принятии либо отклонении гипотезы: Отвергаем нулевую гипотезу в пользу альтернативной гипотезы.")
    else:
        print("Вывод о принятии либо отклонении гипотезы: Не отвергаем нулевую гипотезу.")
elif K == 'less':
    if static(x,y) < -t_critical:
        print("Вывод о принятии либо отклонении гипотезы: Отвергаем нулевую гипотезу в пользу альтернативной гипотезы.")
    else:
        print("Вывод о принятии либо отклонении гипотезы: Не отвергаем нулевую гипотезу.")
elif K == 'two-sided':
    if abs(static(x,y)) > t_critical:
        print("Вывод о принятии либо отклонении гипотезы: Отвергаем нулевую гипотезу в пользу альтернативной гипотезы.")
    else:
        print("Вывод о принятии либо отклонении гипотезы: Не отвергаем нулевую гипотезу.")