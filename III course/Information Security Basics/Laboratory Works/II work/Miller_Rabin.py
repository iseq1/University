import secrets

def miller_rabin_test(n, k):
    """
    Использует алгоритм Миллера-Рабина для проверки простоты числа n.

    Args:
        n (int): Число, которое нужно проверить на простоту.
        k (int): Количество раундов тестирования для повышения надежности проверки.

    Returns:
        bool: True, если n вероятно простое число, иначе False.
    """
    # Простые числа 2 и 3
    if n == 2 or n == 3:
        return True
    # Числа <= 1 и четные числа
    if n <= 1 or n % 2 == 0:
        return False

    # Представление n-1 в виде 2^s * t
    s, t = 0, n - 1
    while t % 2 == 0:
        s += 1
        t //= 2

    # Выполнение k раундов тестирования
    # цикл А
    for _ in range(k):
        # Генерация случайного числа a в диапазоне [2, n-2]
        a = secrets.randbelow(n - 3) + 2
        # Вычисление a^t % n
        x = pow(a, t, n)
        # Проверка условий теста Миллера-Рабина
        if x == 1 or x == n - 1:
            continue
        # цикл В
        for _ in range(s - 1):
            x = pow(x, 2, n)
            if x == n - 1:
                break
            elif x == 1:
                return False
        else:
            # Если ни одно из условий не выполнено, число составное
            return False
    # Если после k раундов ни одно условие не нарушено, число вероятно простое
    return True