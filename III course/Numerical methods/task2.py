import numpy as np


def runge_kutta_4_system(f, y0, a, b, h):
    """
    Интегрирует систему обыкновенных дифференциальных уравнений методом Рунге-Кутты 4-го порядка.

    :param f: Функция правых частей уравнений, принимает два аргумента: t и y.
    :param y0: Начальные условия, массив длины n.
    :param a: Начальное значение аргумента t.
    :param b: Конечное значение аргумента t.
    :param h: Шаг интегрирования.
    :return: Массив значений аргумента t и массив значений функции y.
    """
    t = np.arange(a, b + h, h)  # Создаем массив значений t от a до b с шагом h
    y = np.zeros((len(t), len(y0)))  # Инициализируем массив значений y
    y[0] = y0  # Устанавливаем начальные условия

    for i in range(1, len(t)):
        k1 = f(t[i - 1], y[i - 1])
        k2 = f(t[i - 1] + h / 2, y[i - 1] + h * k1 / 2)
        k3 = f(t[i - 1] + h / 2, y[i - 1] + h * k2 / 2)
        k4 = f(t[i - 1] + h, y[i - 1] + h * k3)
        y[i] = y[i - 1] + h * (k1 + 2 * k2 + 2 * k3 + k4) / 6

    return t, y

